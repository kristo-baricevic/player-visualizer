/*
 * Copyright (C) 2006-2020  Music Technology Group - Universitat Pompeu Fabra
 *
 * This file is part of Essentia
 *
 * Essentia is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation (FSF), either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the Affero GNU General Public License
 * version 3 along with this program.  If not, see http://www.gnu.org/licenses/
 */
var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(e,i)};function e(e,i){function o(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(o.prototype=i.prototype,new o)}var i={isPlotting:!1,startTimeIndex:0},o={title:"Melody Contour",plot_bgcolor:"transparent",paper_bgcolor:"#FCF7F7",autosize:!1,width:670,height:300,xaxis:{type:"time",title:"Time"},yaxis:{autorange:!1,range:[30,3e3],type:"linear",title:"Frequency (Hz)"}},r={title:"",plot_bgcolor:"transparent",paper_bgcolor:"#FCF7F7",autosize:!1,width:670,height:300,xaxis:{autorange:!0,time:"Time",title:"Time"},yaxis:{title:"Bins",range:[0,11]}},n={title:"",plot_bgcolor:"transparent",paper_bgcolor:"#FCF7F7",autosize:!1,width:670,height:300,xaxis:{title:"Time",autorange:!0,time:"Time"},yaxis:{title:"Bands",range:null,type:"linear"}},s=function(){function t(t,e){void 0===e&&(e=i),this.Plotly=t,this.options=e,this.isPlotting=e.isPlotting,this.startTimeIndex=e.startTimeIndex}return t.prototype.makeLinearSpace=function(t,e,i){if(void 0===i&&(i=Math.max(Math.round(e-t)+1,1)),i<2)return 1===i?[t]:[];var o,r=Array(i);for(o=--i;o>=0;o--)r[o]=(o*e+(i-o)*t)/i;return r},t}(),a=function(t){function i(e,i,r){void 0===r&&(r=o);var n=t.call(this,e)||this;return n.Plotly=e,n.divId=i,n.plotLayout=r,n}return e(i,t),i.prototype.create=function(t,e,i,o){this.plotLayout.title=e;var r=this.makeLinearSpace(this.startTimeIndex,i/o,t.length);this.isPlotting?(r=this.makeLinearSpace(this.startTimeIndex,this.startTimeIndex+i/o,t.length),this.startTimeIndex=r[r.length-1],this.Plotly.extendTraces(this.divId,{x:[r],y:[t]},[0])):(this.Plotly.newPlot(this.divId,[{x:r,y:t,mode:"lines",line:{color:"#2B6FAC",width:2}}],this.plotLayout),this.isPlotting=!0,this.startTimeIndex=r[r.length-1])},i.prototype.destroy=function(){this.Plotly.deleteTraces(this.divId,0),this.isPlotting=!1,this.startTimeIndex=0},i}(s),l=function(t){function i(e,i,o,r){void 0===o&&(o="chroma"),void 0===r&&(r=n);var s=t.call(this,e)||this;if(s.Plotly=e,s.divId=i,s.plotType=o,s.plotLayout=r,"chroma"===o)s.yAxis=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];else{if("spectrogram"!==o)throw"Invalid value for argument 'plotType'. Should be either 'chroma' or 'spectrogram'";s.yAxis=null}return s}return e(i,t),i.prototype.create=function(t,e,i,o,r){if(void 0===r&&(r="Jet"),this.plotLayout.title=e,"spectrogram"===this.plotType){var n=t[0].length;this.plotLayout.yaxis.range=[0,n+1]}if(this.isPlotting){s=this.makeLinearSpace(this.startTimeIndex,this.startTimeIndex+i/o,t.length);this.startTimeIndex=s[s.length-1],this.Plotly.extendTraces(this.divId,{x:[s],z:[t]},[0])}else{var s,a={x:s=this.makeLinearSpace(this.startTimeIndex,i/o,t.length),y:this.yAxis,z:t,colorscale:r,type:"heatmap",transpose:!0};this.Plotly.newPlot(this.divId,[a],this.plotLayout),this.isPlotting=!0,this.startTimeIndex=s[s.length-1]}},i.prototype.destroy=function(){this.Plotly.deleteTraces(this.divId,0),this.isPlotting=!1,this.startTimeIndex=0},i}(s);export{s as EssentiaPlot,r as LayoutChromaPlot,o as LayoutMelodyContourPlot,n as LayoutSpectrogramPlot,i as PlotConfig,l as PlotHeatmap,a as PlotMelodyContour};
