import Essentia from "./core_api";
/**
 * EssentiaExtractor Base Class
 * @class
 * @extends {Essentia}
 */
declare class EssentiaExtractor extends Essentia {
    EssentiaModule: any;
    isDebug: boolean;
    sampleRate: any;
    frameSize: any;
    hopSize: any;
    profile: any;
    /**
     *Creates an instance of EssentiaExtractor.
    * @param {*} EssentiaModule
    * @param {boolean} [isDebug=false]
    * @constructs
    */
    constructor(EssentiaModule: any, isDebug?: boolean);
    /**
     * Compute mel spectrogram for a given audio data along with an optional extractor profile configuration
     * @method
     * @param {Float32Array} audioData
     * @param {boolean} [asVector=false] whether to output the spectrogram as a vector float type for chaining with other essentia algorithms.
     * @param {*} [config=this.profile]
     * @returns {Array} Frame-wise Mel Spectrogram
     * @memberof EssentiaExtractor
     */
    melSpectrogram(audioData: Float32Array, asVector?: boolean, config?: any): any;
    /**
     * Compute frame-wise HPCP chroma feature for a given audio data along with an optional extractor profile configuration
     * @method
     * @param {Float32Array} audioData
     * @param {boolean} [asVector=false] whether to output the hpcpgram as a vector float type for chaining with other essentia algorithms.
     * @param {*} [config=this.profile]
     * @returns {Array} Frame-wise HPCP
     * @memberof EssentiaExtractor
     */
    hpcpgram(audioData: Float32Array, asVector?: boolean, config?: any): any;
}
export default EssentiaExtractor;
